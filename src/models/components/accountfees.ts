/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AccountFees = {
  pix?: number | undefined;
  boleto?: number | undefined;
  card?: number | undefined;
};

/** @internal */
export const AccountFees$inboundSchema: z.ZodType<
  AccountFees,
  z.ZodTypeDef,
  unknown
> = z.object({
  pix: z.number().optional(),
  boleto: z.number().optional(),
  card: z.number().optional(),
});

/** @internal */
export type AccountFees$Outbound = {
  pix?: number | undefined;
  boleto?: number | undefined;
  card?: number | undefined;
};

/** @internal */
export const AccountFees$outboundSchema: z.ZodType<
  AccountFees$Outbound,
  z.ZodTypeDef,
  AccountFees
> = z.object({
  pix: z.number().optional(),
  boleto: z.number().optional(),
  card: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountFees$ {
  /** @deprecated use `AccountFees$inboundSchema` instead. */
  export const inboundSchema = AccountFees$inboundSchema;
  /** @deprecated use `AccountFees$outboundSchema` instead. */
  export const outboundSchema = AccountFees$outboundSchema;
  /** @deprecated use `AccountFees$Outbound` instead. */
  export type Outbound = AccountFees$Outbound;
}

export function accountFeesToJSON(accountFees: AccountFees): string {
  return JSON.stringify(AccountFees$outboundSchema.parse(accountFees));
}

export function accountFeesFromJSON(
  jsonString: string,
): SafeParseResult<AccountFees, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountFees$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountFees' from JSON`,
  );
}
